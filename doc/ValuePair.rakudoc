=begin pod

=head1 NAME

ValuePair - Provide an immutable Pair value type

=head1 SYNOPSIS

=begin code :lang<raku>

use ValuePair;

my $a = ValuePair.new("a",42);
my $b = ValuePair.new( key => "a", value => 42);
my $c = ValuePair.new( (a => 42) );

set($a, $b, $c);  # elems == 1

=end code

=head1 DESCRIPTION

Raku provides a semi-immutable C<Pair> datatype, where the value of a
C<Pair> object can be a container, and thus mutable.  Therefore, a
standard C<Pair> object is B<not> a value type.

The C<ValuePair> class provided by this module, is a subclass of
C<Pair>, and does not allow a mutable value.  And thus it can be a
value type.

The C<.new> method either accepts two positional arguments (key and value),
or C<key> and C<value> named arguments, or an existing C<Pair>.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/ValuePair .
Comments and Pull Requests are welcome.

If you like this module, or what Iâ€™m doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2022, 2024, 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
